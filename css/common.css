/* ! COMMON */

body {
  color: #333;
  font-size: 16px;
  /* 100~900 가 있고 400이 기본 */
  font-weight: 400;  
  line-height: 1.4;
  font-family: 'Nanum Gothic', sans-serif;
}

img {
  display: block;
  /* vertical-align: bottom; */
}

a {
  text-decoration: none;
}
/* 가운데정렬을 하기위한 inner */
.inner {
  width: 1100px;
  position: relative;
  margin: 0 auto;
  
}
/* 점수: 10점 */
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: .4s;
}

.btn:hover {
  background-color: #333;
  color: #fff;
}
/* 점수: 20점 . 요소의 상태*/
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}

.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}

.btn.btn--brwon {
  color: #592b18;
  border-color: #592b18;
}

.btn.btn--brwon:hover {
  color: #fff;
  background-color: #592b18;
}

.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #d9aa8a;
}

.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn--gold:hover {
  color: #333;
  background-color: #fff;
}

.back-to-position {
  opacity: 0;
  transition: 1s;
}

.back-to-position.to-right {
  transform: translateX(-150px);
}
.back-to-position.to-left {
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}


/* ! HEADER */
header {
  background-color:#f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  /* badges의 부모요소 */
  /* position: relative; */
  position: fixed;
  /* 뷰포트를 기준으로 배치가 되는거기 때문에 
  가로너비가 auto다 그래서 이러한현상이일어난다
  position이 fixed, absolute로 지정된 값은 viewport에 영향을 받음
  가로너비가 최대한으로 줄어들려고 시도를 하기 때문에 width:100%;로 해줘야해요 */
  top: 0;
  width: 100%;
  /* 뱃지부분 가리는걸 막기위해 */
  z-index: 9;
}

header > .inner {
  height: 120px;
}

header .logo {
/* logo 정렬하는 방법
1. 기준을 잡아줘야 하기 때문에 top,bottom: 0;으로 수직의 위아래 주고 외부여백 margin: auto;으로 해준다.
2. position(부모요소)를 어디에 둘 것인지 셜정 후 absolute작성
3. 실제 이미지 크기와 같은 사이즈로 정확한 height값을 작성해줘야 수직정렬이 된다
수평정렬의 경우도 left, right: 0;을 잡아주고 margin: auto;, width값도 작성해 줘야 수평정렬이된다 */
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  /* 부모요소를 기준으로 정확히 왼쪽에 붙어있다는걸 명시함 */
  left: 0;
  margin: auto;

}

header .sub-menu {
  /* flex horizontal */
  display: flex;
  position: absolute;
  top: 10px;
  right: 0;
}

header .sub-menu ul.menu {
  display: flex;
  font-family: Arial, sans-serif;
}

header .sub-menu ul.menu li {
  /* 가상요소 위치를 위한 position값 */
  position: relative;
}
/* 가상요소만들기 before, after는 inline*/
header .sub-menu ul.menu li::before {
  content: "";
  /* inline값은 가로세로값을 명확하게 가질 수 없기때문에 block으로 설정 */
  display: block;
  /* position: absolute, fixed는 display: block;의 값을 가지고 있기때문에
  위에 display: block; 생략 가능하지만 냅둬도 됨 */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
/* 왼쪽에 구분선 없애는 방법 */
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12px;
  /* a 태그는 inline요소여서 margin, padding의 위아래 여백값을
  제대로 줄 수 없는 문제가 생기기때문에 display:block; 을 해줘야함 */
  padding: 11px 16px;
  display: block;
  /* block요소는 가로사이즈를 최대한 늘려서 사용할려하기때문에 기본 */
  color: #656565;
}
/* 가상클래스만들기 */
header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  height: 34px;;
  /* material-icons의 부모요소 */
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  /* input요소 클릭했을때 자동으로 생기는 파란색 라인 설정 없애기 */
  outline: none;
  background-color:#fff;
  color: #777;
  /* transition효과로 너비가 자연스럽게 늘어났다 줄어들음 */
  transition: width .4s;
  font-size: 12px;
}

header .sub-menu .search input:focus {
  /* input 클릭시 너비 */
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  position: absolute;
  /* 수직정렬 top, bottom */
  top: 0;
  bottom: 0;  
  margin: auto;
  height: 24px;
  right: 5px;
  transition: .4s;
}
/* focused 됐을때 머터리얼 아이콘 자연스럽게 사라지게 하기위한 효과 */
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* !MAIN-MENU */

header .main-menu {
  display: flex;
  /* inner의 자식요소 */
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  
}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__contents {
  /* top이나 bottom 속성을 사용하지 않아 수직 위치 값이 없다면,
  요소의 원래 위치를 그대로 사용합니다.
  만약 position: absolute;를 사용했다면, (위치상) 부모 요소를 기준으로
  하므로 화면의 뷰포트 좌우 끝까지 늘어날 수 없게 됩니다. */
  width: 100%;
  position: fixed;
  /* left: 0;을 지워보면 menu위치를 따라가게됨 */
  left: 0;
  /* mouse hover시에만 보이게 */
  display: none;
}
/* 가상클래스 :hover */
header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* height: 200px; 값을 지우면서 내용만큼 크기가 채워지게끔*/
}

/* contents__menu안에 ul태그가 2개있기 때문에 바로 아래자식한테만 적용되도록 */
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0px;
}

header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
  
}

header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px;
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  /* height: 100px; 글씨에 맞게 높이 조절*/
  /* 글자크기는 상속 */
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
  
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0,0,0,.15);
  cursor: pointer;
}

/* !FOOTER */

footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}

footer .menu li::before {
  content: '';
  /* display: block; */
  width: 3px;
  height: 3px;
  background-color: #555;
  position:absolute;
  /* 수직정렬 */
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
}

footer .menu li:last-child::before {
  display: none;
}

footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding:15px;
  /* inline요소는 margin, padding이라는 여백값을 정상적으로 사용할 수 없으므로 display를 바꿔줘야함 */
  display: block;
}
footer .menu li a.green {
  color: #669900;
} 

footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}

footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
}

footer .btn-group .btn:last-child {
  /* 마지막에는 마진을 사용하지 않겠다 */
  margin-right: 0;
}

footer .info {
  margin-top: 20px;
  text-align: center;
}

footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}

footer .info span:last-child {
  margin-right: 0;
}

footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}

footer .logo {
  /* 상중하
  img요소사 display:block; + margin: 0 auto;인 경우
  width 속성이 없어도 가운데 정렬이 가능
  img:block요소로 이미 지정해 놨기때문에 현재 가능 */
  margin: 30px auto 0;
}